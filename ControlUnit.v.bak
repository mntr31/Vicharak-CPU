module ControlUnit(input [3:0] opcode,
							output reg regWrite,memoryRead,memoryWrite,branch,jump);
always @(*)begin
case(opcode)
//ADD
4'b0000: begin
	regWrite = 1;
	memoryRead = 0;
	memoryWrite = 0;
	branch = 0;
	jump = 0;
	end

//SUB
4'b0001: begin
	regWrite = 1;
	memoryRead = 0;
	memoryWrite = 0;
	branch = 0;
	jump = 0;
	end
	
//MUL
4'b0010: begin
	regWrite = 1;
	memoryRead = 0;
	memoryWrite = 0;
	branch = 0;
	jump = 0;
	end

//DIV
4'b0011: begin
	regWrite = 1;
	memoryRead = 0;
	memoryWrite = 0;
	branch = 0;
	jump = 0;
	end

//AND
4'b0100: begin
	regWrite = 1;
	memoryRead = 0;
	memoryWrite = 0;
	branch = 0;
	jump = 0;
	end
	
//OR
4'b0101: begin
	regWrite = 1;
	memoryRead = 0;
	memoryWrite = 0;
	branch = 0;
	jump = 0;
	end

//XOR
4'b0110: begin
	regWrite = 1;
	memoryRead = 0;
	memoryWrite = 0;
	branch = 0;
	jump = 0;
	end
	
//NOT
4'b0111: begin
	regWrite = 1;
	memoryRead = 0;
	memoryWrite = 0;
	branch = 0;
	jump = 0;
	end
	
//MAC
4'b1000: begin
	regWrite = 1;
	memoryRead = 0;
	memoryWrite = 0;
	branch = 0;
	jump = 0;
	end
	
//SQR
4'b1001: begin
	regWrite = 1;
	memoryRead = 0;
	memoryWrite = 0;
	branch = 0;
	jump = 0;
	end
	
//ABS
4'b1010: begin
	regWrite = 1;
	memoryRead = 0;
	memoryWrite = 0;
	branch = 0;
	jump = 0;
	end
	
//AVG
4'b1011: begin
	regWrite = 1;
	memoryRead = 0;
	memoryWrite = 0;
	branch = 0;
	jump = 0;
	end

//INC
4'b1100: begin
	regWrite = 1;
	memoryRead = 0;
	memoryWrite = 0;
	branch = 0;
	jump = 0;
	end
	
//DEC
4'b1101: begin
	regWrite = 1;
	memoryRead = 0;
	memoryWrite = 0;
	branch = 0;
	jump = 0;
	end
	
default: begin
	regWrite = 1;
	memoryRead = 0;
	memoryWrite = 0;
	branch = 0;
	jump = 0;
	end
	endcase
	end
	endmodule


	
	